{"version":3,"file":"TasksPageWithBulkOps-db26d4d7.js","sources":["../../../node_modules/lucide-react/dist/esm/icons/calendar-days.js","../../../node_modules/lucide-react/dist/esm/icons/undo-2.js","../../../src/components/tasks/ConvertToProject.tsx","../../../src/pages/TasksPageWithBulkOps.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.344.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst CalendarDays = createLucideIcon(\"CalendarDays\", [\n  [\"path\", { d: \"M8 2v4\", key: \"1cmpym\" }],\n  [\"path\", { d: \"M16 2v4\", key: \"4m81vk\" }],\n  [\"rect\", { width: \"18\", height: \"18\", x: \"3\", y: \"4\", rx: \"2\", key: \"1hopcy\" }],\n  [\"path\", { d: \"M3 10h18\", key: \"8toen8\" }],\n  [\"path\", { d: \"M8 14h.01\", key: \"6423bh\" }],\n  [\"path\", { d: \"M12 14h.01\", key: \"1etili\" }],\n  [\"path\", { d: \"M16 14h.01\", key: \"1gbofw\" }],\n  [\"path\", { d: \"M8 18h.01\", key: \"lrp35t\" }],\n  [\"path\", { d: \"M12 18h.01\", key: \"mhygvu\" }],\n  [\"path\", { d: \"M16 18h.01\", key: \"kzsmim\" }]\n]);\n\nexport { CalendarDays as default };\n//# sourceMappingURL=calendar-days.js.map\n","/**\n * @license lucide-react v0.344.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Undo2 = createLucideIcon(\"Undo2\", [\n  [\"path\", { d: \"M9 14 4 9l5-5\", key: \"102s5s\" }],\n  [\"path\", { d: \"M4 9h10.5a5.5 5.5 0 0 1 5.5 5.5v0a5.5 5.5 0 0 1-5.5 5.5H11\", key: \"llx8ln\" }]\n]);\n\nexport { Undo2 as default };\n//# sourceMappingURL=undo-2.js.map\n","import React, { useState } from 'react';\nimport { Task, Project } from '../../types';\nimport Modal from '../common/Modal';\nimport Button from '../common/Button';\nimport { FolderPlus, ChevronRight, Calendar, Tag, Layers } from 'lucide-react';\n\ninterface ConvertToProjectProps {\n  task: Task;\n  onConfirm: (projectData: Partial<Project>, options: ConversionOptions) => void;\n  onCancel: () => void;\n  subtasks?: Task[];\n}\n\ninterface ConversionOptions {\n  includeSubtasks: boolean;\n  createPhases: boolean;\n  deleteOriginalTask: boolean;\n  moveToProject: boolean;\n}\n\nconst ConvertToProject: React.FC<ConvertToProjectProps> = ({ \n  task, \n  onConfirm, \n  onCancel,\n  subtasks = []\n}) => {\n  const [projectName, setProjectName] = useState(task.title);\n  const [projectDescription, setProjectDescription] = useState(task.description);\n  const [projectColor, setProjectColor] = useState('#3B82F6');\n  const [options, setOptions] = useState<ConversionOptions>({\n    includeSubtasks: subtasks.length > 0,\n    createPhases: false,\n    deleteOriginalTask: false,\n    moveToProject: true\n  });\n\n  const colorOptions = [\n    '#EF4444', // red\n    '#F97316', // orange\n    '#F59E0B', // amber\n    '#10B981', // emerald\n    '#3B82F6', // blue\n    '#6366F1', // indigo\n    '#8B5CF6', // violet\n    '#EC4899', // pink\n  ];\n\n  const handleConfirm = () => {\n    const projectData: Partial<Project> = {\n      name: projectName,\n      description: projectDescription,\n      color: projectColor\n    };\n    \n    onConfirm(projectData, options);\n  };\n\n  return (\n    <Modal\n      isOpen={true}\n      onClose={onCancel}\n      title=\"Convert Task to Project\"\n      size=\"medium\"\n    >\n      <div className=\"space-y-6\">\n        {/* Task Info */}\n        <div className=\"bg-gray-50 dark:bg-gray-800 rounded-lg p-4\">\n          <h3 className=\"text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n            Converting Task:\n          </h3>\n          <p className=\"text-gray-900 dark:text-gray-100 font-medium\">{task.title}</p>\n          {task.description && (\n            <p className=\"text-sm text-gray-600 dark:text-gray-400 mt-1\">{task.description}</p>\n          )}\n          {subtasks.length > 0 && (\n            <p className=\"text-sm text-blue-600 dark:text-blue-400 mt-2\">\n              <Layers className=\"inline w-4 h-4 mr-1\" />\n              {subtasks.length} subtask{subtasks.length !== 1 ? 's' : ''} found\n            </p>\n          )}\n        </div>\n\n        {/* Project Details */}\n        <div className=\"space-y-4\">\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n              Project Name\n            </label>\n            <input\n              type=\"text\"\n              value={projectName}\n              onChange={(e) => setProjectName(e.target.value)}\n              className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:text-white\"\n              placeholder=\"Enter project name\"\n            />\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n              Project Description\n            </label>\n            <textarea\n              value={projectDescription}\n              onChange={(e) => setProjectDescription(e.target.value)}\n              className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 dark:bg-gray-700 dark:text-white\"\n              placeholder=\"Enter project description\"\n              rows={3}\n            />\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n              Project Color\n            </label>\n            <div className=\"flex gap-2\">\n              {colorOptions.map((color) => (\n                <button\n                  key={color}\n                  onClick={() => setProjectColor(color)}\n                  className={`w-8 h-8 rounded-full border-2 ${\n                    projectColor === color\n                      ? 'border-gray-900 dark:border-white'\n                      : 'border-gray-300 dark:border-gray-600'\n                  }`}\n                  style={{ backgroundColor: color }}\n                  aria-label={`Select color ${color}`}\n                />\n              ))}\n            </div>\n          </div>\n        </div>\n\n        {/* Conversion Options */}\n        <div className=\"space-y-3\">\n          <h3 className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">\n            Conversion Options\n          </h3>\n          \n          {subtasks.length > 0 && (\n            <label className=\"flex items-center space-x-3\">\n              <input\n                type=\"checkbox\"\n                checked={options.includeSubtasks}\n                onChange={(e) => setOptions({ ...options, includeSubtasks: e.target.checked })}\n                className=\"h-4 w-4 text-blue-600 rounded\"\n              />\n              <span className=\"text-sm text-gray-700 dark:text-gray-300\">\n                Include all {subtasks.length} subtasks in the project\n              </span>\n            </label>\n          )}\n\n          <label className=\"flex items-center space-x-3\">\n            <input\n              type=\"checkbox\"\n              checked={options.moveToProject}\n              onChange={(e) => setOptions({ ...options, moveToProject: e.target.checked })}\n              className=\"h-4 w-4 text-blue-600 rounded\"\n            />\n            <span className=\"text-sm text-gray-700 dark:text-gray-300\">\n              Keep original task as first project task\n            </span>\n          </label>\n\n          <label className=\"flex items-center space-x-3\">\n            <input\n              type=\"checkbox\"\n              checked={options.createPhases}\n              onChange={(e) => setOptions({ ...options, createPhases: e.target.checked })}\n              className=\"h-4 w-4 text-blue-600 rounded\"\n            />\n            <span className=\"text-sm text-gray-700 dark:text-gray-300\">\n              Create project phases (Planning, Execution, Review)\n            </span>\n          </label>\n\n          {!options.moveToProject && (\n            <label className=\"flex items-center space-x-3\">\n              <input\n                type=\"checkbox\"\n                checked={options.deleteOriginalTask}\n                onChange={(e) => setOptions({ ...options, deleteOriginalTask: e.target.checked })}\n                className=\"h-4 w-4 text-blue-600 rounded\"\n              />\n              <span className=\"text-sm text-gray-700 dark:text-gray-300\">\n                Delete original task after conversion\n              </span>\n            </label>\n          )}\n        </div>\n\n        {/* Preview */}\n        <div className=\"bg-blue-50 dark:bg-blue-900/20 rounded-lg p-4\">\n          <h3 className=\"text-sm font-medium text-blue-900 dark:text-blue-300 mb-2\">\n            What will happen:\n          </h3>\n          <ul className=\"space-y-1 text-sm text-blue-800 dark:text-blue-400\">\n            <li className=\"flex items-start\">\n              <ChevronRight className=\"w-4 h-4 mr-1 mt-0.5 flex-shrink-0\" />\n              A new project \"{projectName}\" will be created\n            </li>\n            {options.moveToProject && (\n              <li className=\"flex items-start\">\n                <ChevronRight className=\"w-4 h-4 mr-1 mt-0.5 flex-shrink-0\" />\n                The original task will be moved to this project\n              </li>\n            )}\n            {options.includeSubtasks && subtasks.length > 0 && (\n              <li className=\"flex items-start\">\n                <ChevronRight className=\"w-4 h-4 mr-1 mt-0.5 flex-shrink-0\" />\n                {subtasks.length} subtask{subtasks.length !== 1 ? 's' : ''} will be moved to the project\n              </li>\n            )}\n            {options.createPhases && (\n              <li className=\"flex items-start\">\n                <ChevronRight className=\"w-4 h-4 mr-1 mt-0.5 flex-shrink-0\" />\n                Project phases will be created for better organization\n              </li>\n            )}\n            {options.deleteOriginalTask && !options.moveToProject && (\n              <li className=\"flex items-start\">\n                <ChevronRight className=\"w-4 h-4 mr-1 mt-0.5 flex-shrink-0\" />\n                The original task will be deleted\n              </li>\n            )}\n          </ul>\n        </div>\n\n        {/* Actions */}\n        <div className=\"flex justify-end space-x-3\">\n          <Button\n            onClick={onCancel}\n            variant=\"secondary\"\n          >\n            Cancel\n          </Button>\n          <Button\n            onClick={handleConfirm}\n            variant=\"primary\"\n            disabled={!projectName.trim()}\n            icon={<FolderPlus size={16} />}\n          >\n            Create Project\n          </Button>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default ConvertToProject;","import React, { useState, useEffect, useRef } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useAppContext } from '../context/AppContextSupabase';\nimport { Task, TaskSortMode, WhatNowCriteria } from '../types';\nimport { TaskDisplay } from '../components/TaskDisplay';\nimport TaskFormWithDependencies from '../components/tasks/TaskFormWithDependencies';\nimport AITaskBreakdown from '../components/tasks/AITaskBreakdown';\nimport ConvertToProject from '../components/tasks/ConvertToProject';\nimport Modal from '../components/common/Modal';\nimport Button from '../components/common/Button';\nimport Card from '../components/common/Card';\nimport Empty from '../components/common/Empty';\nimport { QuickCapture } from '../components/tasks/QuickCapture';\nimport { \n  Plus, Filter, X, Undo2, Archive, \n  AlertTriangle, CalendarDays, Calendar, Layers, \n  Trash2, CheckCircle2, Folder, FileArchive,\n  ArrowUpDown, Clock, Star, Hash, FolderOpen, Tag,\n  Zap, Brain, Timer, Battery\n} from 'lucide-react';\nimport { formatDate, getOverdueTasks, getTasksDueToday, getTasksDueThisWeek } from '../utils/helpers';\nimport { DeletedTask, getDeletedTasks, restoreDeletedTask, permanentlyDeleteTask } from '../utils/localStorage';\nimport { sortTasks as smartSortTasks, SortMode, EnergyLevel, getFilteredCounts, getSortModeInfo } from '../utils/taskPrioritization';\n\ninterface BulkTaskCardProps {\n  task: Task;\n  isSelected: boolean;\n  onSelectChange: (selected: boolean) => void;\n  onEdit: (task: Task) => void;\n  onDelete: (taskId: string) => void;\n  onBreakdown?: (task: Task) => void;\n  onConvertToProject?: (task: Task) => void;\n}\n\nconst BulkTaskCard: React.FC<BulkTaskCardProps> = ({ \n  task, \n  isSelected, \n  onSelectChange,\n  onEdit,\n  onDelete,\n  onBreakdown,\n  onConvertToProject\n}) => {\n  const { updateTask } = useAppContext();\n  \n  return (\n    <div className=\"relative\">\n      {/* Selection checkbox for bulk operations */}\n      <div className=\"absolute left-2 top-4 z-10\">\n        <input\n          type=\"checkbox\"\n          checked={isSelected}\n          onChange={(e) => onSelectChange(e.target.checked)}\n          className=\"h-4 w-4 text-indigo-600 border-gray-300 rounded focus:ring-indigo-500\"\n        />\n      </div>\n      \n      {/* Task display with padding for checkbox */}\n      <div className={isSelected ? 'ml-8' : 'ml-8'}>\n        <TaskDisplay\n          task={task}\n          onToggle={() => updateTask({ ...task, completed: !task.completed })}\n          onEdit={onEdit}\n          onDelete={onDelete}\n          onBreakdown={onBreakdown}\n          onConvertToProject={onConvertToProject}\n        />\n      </div>\n    </div>\n  );\n};\n\nconst TasksPageWithBulkOps: React.FC = () => {\n  const location = useLocation();\n  const { \n    tasks, \n    projects, \n    categories, \n    deleteTask, \n    undoDelete, \n    hasRecentlyDeleted, \n    archiveCompletedTasks,\n    bulkDeleteTasks,\n    bulkCompleteTasks,\n    bulkMoveTasks,\n    bulkArchiveTasks,\n    bulkAddTasks,\n    bulkConvertToSubtasks,\n    bulkAssignCategories\n  } = useAppContext();\n  \n  // Get initial tab from URL query params\n  const searchParams = new URLSearchParams(location.search);\n  const tabParam = searchParams.get('tab') as 'today' | 'tomorrow' | 'week' | 'overdue' | 'all' | null;\n  const categoryIdParam = searchParams.get('categoryId');\n  const initialTab = tabParam || 'all';\n  \n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [editingTask, setEditingTask] = useState<Task | null>(null);\n  const [showUndoNotification, setShowUndoNotification] = useState(false);\n  const [showArchiveConfirm, setShowArchiveConfirm] = useState(false);\n  const [showBulkActions, setShowBulkActions] = useState(false);\n  const [selectedTasks, setSelectedTasks] = useState<Set<string>>(new Set());\n  const [showBulkMoveModal, setShowBulkMoveModal] = useState(false);\n  const [selectedProjectForMove, setSelectedProjectForMove] = useState<string | null>(null);\n  const [breakdownTask, setBreakdownTask] = useState<Task | null>(null);\n  const [convertToProjectTask, setConvertToProjectTask] = useState<Task | null>(null);\n  const [showConvertToSubtasksModal, setShowConvertToSubtasksModal] = useState(false);\n  const [selectedParentTaskId, setSelectedParentTaskId] = useState<string | null>(null);\n  const [, setDeletedTasks] = useState<DeletedTask[]>([]);\n  const [showBulkCategoryModal, setShowBulkCategoryModal] = useState(false);\n  const [selectedCategoryIdsForBulk, setSelectedCategoryIdsForBulk] = useState<string[]>([]);\n  const [categoryAssignMode, setCategoryAssignMode] = useState<'add' | 'replace'>('add');\n  \n  // Filter state\n  const [showCompleted, setShowCompleted] = useState(false);\n  const [showArchived, setShowArchived] = useState(false);\n  const [filterProjectId, setFilterProjectId] = useState<string | null>(null);\n  const [filterCategoryId, setFilterCategoryId] = useState<string | null>(categoryIdParam);\n  const [isFilterOpen, setIsFilterOpen] = useState(false);\n  \n  // View state\n  const [activeTab, setActiveTab] = useState<'today' | 'tomorrow' | 'week' | 'overdue' | 'all' | 'deleted'>(initialTab);\n  \n  // Sort state\n  type SortOption = 'dueDate' | 'priority' | 'createdAt' | 'title' | 'estimatedMinutes' | 'project';\n  type SortDirection = 'asc' | 'desc';\n  const [sortBy, setSortBy] = useState<SortOption>('dueDate');\n  const [sortDirection, setSortDirection] = useState<SortDirection>('asc');\n  const [showSortMenu, setShowSortMenu] = useState(false);\n  const sortMenuRef = useRef<HTMLDivElement>(null);\n  \n  // Smart sorting state\n  const [smartSortMode, setSmartSortMode] = useState<SortMode>('smart');\n  const [currentEnergy, setCurrentEnergy] = useState<EnergyLevel>('medium');\n  const [showSmartSort, setShowSmartSort] = useState(false);\n  \n  // Show undo notification when a task is deleted\n  useEffect(() => {\n    if (hasRecentlyDeleted) {\n      setShowUndoNotification(true);\n      const timer = setTimeout(() => {\n        setShowUndoNotification(false);\n      }, 5000);\n      return () => clearTimeout(timer);\n    }\n  }, [hasRecentlyDeleted]);\n  \n  // Load deleted tasks when tab changes\n  useEffect(() => {\n    if (activeTab === 'deleted') {\n      loadDeletedTasks();\n    }\n  }, [activeTab]);\n  \n  // Close sort menu when clicking outside\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (sortMenuRef.current && !sortMenuRef.current.contains(event.target as Node)) {\n        setShowSortMenu(false);\n      }\n    };\n    \n    if (showSortMenu) {\n      document.addEventListener('mousedown', handleClickOutside);\n    }\n    \n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [showSortMenu]);\n  \n  const loadDeletedTasks = () => {\n    const deleted = getDeletedTasks();\n    setDeletedTasks(deleted.sort((a, b) => \n      new Date(b.deletedAt).getTime() - new Date(a.deletedAt).getTime()\n    ));\n  };\n  \n  // const handleRestoreTask = (taskId: string) => {\n  //   const restoredTask = restoreDeletedTask(taskId);\n  //   if (restoredTask) {\n  //     loadDeletedTasks();\n  //     // The context will automatically update with the restored task\n  //   }\n  // };\n  \n  // const handlePermanentlyDeleteTask = (taskId: string) => {\n  //   permanentlyDeleteTask(taskId);\n  //   loadDeletedTasks();\n  // };\n  \n  const handleOpenModal = (task?: Task) => {\n    if (task) {\n      setEditingTask(task);\n    } else {\n      setEditingTask(null);\n    }\n    setIsModalOpen(true);\n  };\n  \n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n    setEditingTask(null);\n  };\n  \n  const handleDeleteTask = (taskId: string) => {\n    deleteTask(taskId);\n  };\n  \n  const handleUndo = () => {\n    undoDelete();\n    setShowUndoNotification(false);\n  };\n  \n  const toggleFilter = () => {\n    setIsFilterOpen(!isFilterOpen);\n  };\n  \n  const clearFilters = () => {\n    setShowCompleted(false);\n    setShowArchived(false);\n    setFilterProjectId(null);\n    setFilterCategoryId(null);\n  };\n\n  const handleArchiveConfirmOpen = () => {\n    const completedTasks = tasks.filter(task => task.completed && !task.archived);\n    if (completedTasks.length > 0) {\n      setShowArchiveConfirm(true);\n    }\n  };\n\n  const handleArchiveConfirmClose = () => {\n    setShowArchiveConfirm(false);\n  };\n\n  const handleArchiveCompleted = () => {\n    archiveCompletedTasks();\n    setShowArchiveConfirm(false);\n  };\n  \n  const handleBreakdown = (task: Task) => {\n    setBreakdownTask(task);\n  };\n  \n  const handleBreakdownAccept = async (subtasks: Partial<Task>[]) => {\n    if (breakdownTask) {\n\n      // Prepare all subtasks with parentTaskId and other inherited fields\n      const preparedSubtasks = subtasks.map((subtask) => ({\n        ...subtask,\n        parentTaskId: breakdownTask.id,\n        projectId: breakdownTask.projectId,\n        categoryIds: breakdownTask.categoryIds || [],\n        dueDate: subtask.dueDate || breakdownTask.dueDate || null,\n        priority: subtask.priority || breakdownTask.priority || 'medium',\n        energyLevel: subtask.energyLevel || breakdownTask.energyLevel,\n        estimatedMinutes: subtask.estimatedMinutes,\n        tags: subtask.tags || [],\n      }));\n\n      bulkAddTasks(preparedSubtasks);\n\n      setBreakdownTask(null);\n    }\n  };\n  \n  const handleBreakdownClose = () => {\n    setBreakdownTask(null);\n  };\n  \n  const handleConvertToProject = (task: Task) => {\n    setConvertToProjectTask(task);\n  };\n  \n  const handleConvertToProjectConfirm = async (projectData: any, options: any) => {\n    if (!convertToProjectTask) return;\n    \n    try {\n      // Create the new project\n      const newProject = await addProject(projectData);\n      \n      // Get subtasks if they exist\n      const subtasks = tasks.filter(t => t.parentTaskId === convertToProjectTask.id);\n      \n      // Update the original task to be part of the project if requested\n      if (options.moveToProject) {\n        await updateTask({\n          ...convertToProjectTask,\n          projectId: newProject.id,\n          parentTaskId: null // Remove parent relationship if it exists\n        });\n      }\n      \n      // Include subtasks if requested\n      if (options.includeSubtasks && subtasks.length > 0) {\n        for (const subtask of subtasks) {\n          await updateTask({\n            ...subtask,\n            projectId: newProject.id,\n            parentTaskId: options.moveToProject ? convertToProjectTask.id : null\n          });\n        }\n      }\n      \n      // Create project phases if requested\n      if (options.createPhases) {\n        const phases = ['Planning', 'Execution', 'Review'];\n        for (const [index, phaseName] of phases.entries()) {\n          await addTask({\n            title: `${phaseName} Phase`,\n            description: `${phaseName} phase for ${newProject.name}`,\n            projectId: newProject.id,\n            phase: phaseName,\n            phaseOrder: index,\n            tags: [phaseName.toLowerCase()],\n            completed: false,\n            archived: false,\n            categoryIds: convertToProjectTask.categoryIds || [],\n            dueDate: null,\n            startDate: null,\n            parentTaskId: null,\n            priority: 'medium',\n            createdAt: new Date().toISOString(),\n            updatedAt: new Date().toISOString()\n          });\n        }\n      }\n      \n      // Delete original task if requested and not moved to project\n      if (options.deleteOriginalTask && !options.moveToProject) {\n        await deleteTask(convertToProjectTask.id);\n      }\n      \n      setConvertToProjectTask(null);\n    } catch (error) {\n      console.error('Failed to convert task to project:', error);\n    }\n  };\n  \n  const handleConvertToProjectCancel = () => {\n    setConvertToProjectTask(null);\n  };\n  \n  // Bulk operations\n  const toggleTaskSelection = (taskId: string) => {\n    const newSelection = new Set(selectedTasks);\n    if (newSelection.has(taskId)) {\n      newSelection.delete(taskId);\n    } else {\n      newSelection.add(taskId);\n    }\n    setSelectedTasks(newSelection);\n  };\n  \n  const selectAllVisibleTasks = () => {\n    const visibleTaskIds = new Set(getActiveTaskList().map(task => task.id));\n    setSelectedTasks(visibleTaskIds);\n  };\n  \n  const deselectAllTasks = () => {\n    setSelectedTasks(new Set());\n  };\n  \n  const handleBulkDelete = () => {\n    if (selectedTasks.size > 0) {\n      bulkDeleteTasks(Array.from(selectedTasks));\n      setSelectedTasks(new Set());\n    }\n  };\n  \n  const handleBulkComplete = () => {\n    if (selectedTasks.size > 0) {\n      bulkCompleteTasks(Array.from(selectedTasks));\n      setSelectedTasks(new Set());\n    }\n  };\n  \n  const handleBulkMove = () => {\n    setShowBulkMoveModal(true);\n  };\n  \n  const executeBulkMove = () => {\n    if (selectedTasks.size > 0) {\n      bulkMoveTasks(Array.from(selectedTasks), selectedProjectForMove);\n      setSelectedTasks(new Set());\n      setShowBulkMoveModal(false);\n      setSelectedProjectForMove(null);\n    }\n  };\n  \n  const handleBulkArchive = () => {\n    if (selectedTasks.size > 0) {\n      bulkArchiveTasks(Array.from(selectedTasks));\n      setSelectedTasks(new Set());\n    }\n  };\n  \n  const handleBulkConvertToSubtasks = () => {\n    setShowConvertToSubtasksModal(true);\n  };\n  \n  const executeBulkConvertToSubtasks = () => {\n    if (selectedTasks.size > 0 && selectedParentTaskId) {\n      bulkConvertToSubtasks(Array.from(selectedTasks), selectedParentTaskId);\n      setSelectedTasks(new Set());\n      setShowConvertToSubtasksModal(false);\n      setSelectedParentTaskId(null);\n    }\n  };\n  \n  const handleBulkCategoryAssign = () => {\n    setShowBulkCategoryModal(true);\n  };\n  \n  const executeBulkCategoryAssign = () => {\n    if (selectedTasks.size > 0 && selectedCategoryIdsForBulk.length > 0) {\n      bulkAssignCategories(Array.from(selectedTasks), selectedCategoryIdsForBulk, categoryAssignMode);\n      setSelectedTasks(new Set());\n      setShowBulkCategoryModal(false);\n      setSelectedCategoryIdsForBulk([]);\n      setCategoryAssignMode('add');\n    }\n  };\n  \n  // Get tomorrow's date in YYYY-MM-DD format\n  const getTomorrowDate = (): string => {\n    const tomorrow = new Date();\n    tomorrow.setDate(tomorrow.getDate() + 1);\n    return formatDate(tomorrow);\n  };\n  \n  // Get tasks due tomorrow\n  const getTasksDueTomorrow = (tasks: Task[]): Task[] => {\n    const tomorrowDate = getTomorrowDate();\n    return tasks.filter(task => \n      task.dueDate === tomorrowDate && \n      !task.completed && \n      !task.archived\n    );\n  };\n  \n  // Sort function\n  const sortTasks = (tasks: Task[]): Task[] => {\n    // If using smart sort, delegate to the smart sorting utility\n    if (showSmartSort) {\n      return smartSortTasks(tasks, smartSortMode, currentEnergy);\n    }\n    \n    // Otherwise use traditional sorting\n    const sorted = [...tasks].sort((a, b) => {\n      let comparison = 0;\n      \n      switch (sortBy) {\n        case 'dueDate':\n          // Tasks without due dates go to the end\n          if (!a.dueDate && !b.dueDate) comparison = 0;\n          else if (!a.dueDate) comparison = 1;\n          else if (!b.dueDate) comparison = -1;\n          else comparison = a.dueDate.localeCompare(b.dueDate);\n          break;\n          \n        case 'priority':\n          const priorityOrder = { high: 3, medium: 2, low: 1 };\n          comparison = (priorityOrder[b.priority || 'medium'] || 2) - (priorityOrder[a.priority || 'medium'] || 2);\n          break;\n          \n        case 'createdAt':\n          comparison = new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime();\n          break;\n          \n        case 'title':\n          comparison = a.title.localeCompare(b.title);\n          break;\n          \n        case 'estimatedMinutes':\n          const aMinutes = a.estimatedMinutes || 0;\n          const bMinutes = b.estimatedMinutes || 0;\n          comparison = bMinutes - aMinutes;\n          break;\n          \n        case 'project':\n          const aProject = projects.find(p => p.id === a.projectId)?.name || '';\n          const bProject = projects.find(p => p.id === b.projectId)?.name || '';\n          comparison = aProject.localeCompare(bProject);\n          break;\n      }\n      \n      // Apply sort direction\n      return sortDirection === 'asc' ? comparison : -comparison;\n    });\n    \n    return sorted;\n  };\n  \n  // Filter tasks based on global filters (project, category)\n  const applyBaseFilter = (task: Task): boolean => {\n    if (filterProjectId && task.projectId !== filterProjectId) {\n      return false;\n    }\n    \n    if (filterCategoryId && !(task.categoryIds?.includes(filterCategoryId) || false)) {\n      return false;\n    }\n    \n    return true;\n  };\n  \n  // Get tasks for each section (unsorted)\n  const overdueTasksUnsorted = getOverdueTasks(tasks)\n    .filter(task => !task.archived)\n    .filter(applyBaseFilter);\n    \n  const todayTasksUnsorted = getTasksDueToday(tasks)\n    .filter(task => !task.archived)\n    .filter(applyBaseFilter);\n    \n  const tomorrowTasksUnsorted = getTasksDueTomorrow(tasks)\n    .filter(applyBaseFilter);\n    \n  const thisWeekTasksUnsorted = getTasksDueThisWeek(tasks)\n    .filter(task => \n      task.dueDate !== formatDate(new Date()) && \n      task.dueDate !== getTomorrowDate()\n    )\n    .filter(task => !task.archived)\n    .filter(applyBaseFilter);\n    \n  const otherTasksUnsorted = tasks.filter(task => \n    (showCompleted || !task.completed) &&\n    (showArchived || !task.archived) &&\n    (!task.dueDate || \n      (!overdueTasksUnsorted.some(t => t.id === task.id) && \n       !todayTasksUnsorted.some(t => t.id === task.id) && \n       !tomorrowTasksUnsorted.some(t => t.id === task.id) && \n       !thisWeekTasksUnsorted.some(t => t.id === task.id))\n    )\n  ).filter(applyBaseFilter);\n  \n  // Apply sorting to each section\n  const overdueTasks = sortTasks(overdueTasksUnsorted);\n  const todayTasks = sortTasks(todayTasksUnsorted);\n  const tomorrowTasks = sortTasks(tomorrowTasksUnsorted);\n  const thisWeekTasks = sortTasks(thisWeekTasksUnsorted);\n  // const otherTasks = sortTasks(otherTasksUnsorted);\n  \n  // Get currently active task list based on the selected tab\n  const getActiveTaskList = (): Task[] => {\n    switch (activeTab) {\n      case 'today':\n        return todayTasks;\n      case 'tomorrow':\n        return tomorrowTasks;\n      case 'week':\n        return thisWeekTasks;\n      case 'overdue':\n        return overdueTasks;\n      case 'all':\n        // For 'all' view, we need to sort the entire combined list\n        const allTasks = [...overdueTasksUnsorted, ...todayTasksUnsorted, ...tomorrowTasksUnsorted, ...thisWeekTasksUnsorted, ...otherTasksUnsorted];\n        return sortTasks(allTasks);\n      default:\n        // Default to all tasks view\n        const allTasksDefault = [...overdueTasksUnsorted, ...todayTasksUnsorted, ...tomorrowTasksUnsorted, ...thisWeekTasksUnsorted, ...otherTasksUnsorted];\n        return sortTasks(allTasksDefault);\n    }\n  };\n  \n  const activeTaskList = getActiveTaskList();\n  const parentTasks = activeTaskList.filter(task => !task.parentTaskId);\n  \n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex flex-col md:flex-row justify-between md:items-center bg-white dark:bg-gray-800 rounded-lg shadow-sm p-4\">\n        <div>\n          <h1 className=\"text-2xl font-bold text-gray-900 dark:text-gray-100\">Tasks</h1>\n          <p className=\"text-gray-600 dark:text-gray-400\">\n            {activeTaskList.length} task{activeTaskList.length !== 1 ? 's' : ''}\n            {(filterProjectId || filterCategoryId) && ' (filtered)'}\n            {selectedTasks.size > 0 && ` • ${selectedTasks.size} selected`}\n            {sortBy !== 'dueDate' && ` • Sorted by ${sortBy === 'createdAt' ? 'created date' : sortBy === 'estimatedMinutes' ? 'time estimate' : sortBy}`}\n          </p>\n        </div>\n        <div className=\"mt-4 md:mt-0 flex flex-wrap gap-2\">\n          <Button\n            variant={showBulkActions ? \"secondary\" : \"outline\"}\n            onClick={() => setShowBulkActions(!showBulkActions)}\n          >\n            {showBulkActions ? 'Hide Bulk Actions' : 'Bulk Actions'}\n          </Button>\n          <Button\n            variant=\"secondary\"\n            icon={<Archive size={16} />}\n            onClick={handleArchiveConfirmOpen}\n          >\n            Archive Completed\n          </Button>\n          <Button\n            variant={showSmartSort ? \"primary\" : \"secondary\"}\n            icon={<Brain size={16} />}\n            onClick={() => setShowSmartSort(!showSmartSort)}\n          >\n            Smart Sort\n          </Button>\n          <div className=\"relative\" ref={sortMenuRef}>\n            <Button\n              variant=\"secondary\"\n              icon={<ArrowUpDown size={16} />}\n              onClick={() => setShowSortMenu(!showSortMenu)}\n            >\n              {showSmartSort ? 'Legacy Sort' : 'Sort'}\n            </Button>\n            {showSortMenu && (\n              <div className=\"absolute right-0 mt-2 w-56 rounded-md shadow-lg bg-white dark:bg-gray-800 ring-1 ring-black dark:ring-gray-600 ring-opacity-5 z-10\">\n                <div className=\"py-1\" role=\"menu\">\n                  <button\n                    className={`w-full text-left px-4 py-2 text-sm hover:bg-gray-100 dark:hover:bg-gray-700 flex items-center justify-between ${\n                      sortBy === 'dueDate' ? 'bg-indigo-50 dark:bg-indigo-900 text-indigo-700 dark:text-indigo-300' : 'text-gray-700 dark:text-gray-300'\n                    }`}\n                    onClick={() => {\n                      if (sortBy === 'dueDate') {\n                        setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\n                      } else {\n                        setSortBy('dueDate');\n                        setSortDirection('asc');\n                      }\n                    }}\n                  >\n                    <span className=\"flex items-center\">\n                      <Calendar size={16} className=\"mr-2\" />\n                      Due Date\n                    </span>\n                    {sortBy === 'dueDate' && (\n                      <span className=\"text-xs\">{sortDirection === 'asc' ? '↑' : '↓'}</span>\n                    )}\n                  </button>\n                  \n                  <button\n                    className={`w-full text-left px-4 py-2 text-sm hover:bg-gray-100 dark:hover:bg-gray-700 flex items-center justify-between ${\n                      sortBy === 'priority' ? 'bg-indigo-50 dark:bg-indigo-900 text-indigo-700 dark:text-indigo-300' : 'text-gray-700 dark:text-gray-300'\n                    }`}\n                    onClick={() => {\n                      if (sortBy === 'priority') {\n                        setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\n                      } else {\n                        setSortBy('priority');\n                        setSortDirection('desc');\n                      }\n                    }}\n                  >\n                    <span className=\"flex items-center\">\n                      <Star size={16} className=\"mr-2\" />\n                      Priority\n                    </span>\n                    {sortBy === 'priority' && (\n                      <span className=\"text-xs\">{sortDirection === 'asc' ? '↑' : '↓'}</span>\n                    )}\n                  </button>\n                  \n                  <button\n                    className={`w-full text-left px-4 py-2 text-sm hover:bg-gray-100 dark:hover:bg-gray-700 flex items-center justify-between ${\n                      sortBy === 'createdAt' ? 'bg-indigo-50 dark:bg-indigo-900 text-indigo-700 dark:text-indigo-300' : 'text-gray-700 dark:text-gray-300'\n                    }`}\n                    onClick={() => {\n                      if (sortBy === 'createdAt') {\n                        setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\n                      } else {\n                        setSortBy('createdAt');\n                        setSortDirection('desc');\n                      }\n                    }}\n                  >\n                    <span className=\"flex items-center\">\n                      <Plus size={16} className=\"mr-2\" />\n                      Created Date\n                    </span>\n                    {sortBy === 'createdAt' && (\n                      <span className=\"text-xs\">{sortDirection === 'asc' ? '↑' : '↓'}</span>\n                    )}\n                  </button>\n                  \n                  <button\n                    className={`w-full text-left px-4 py-2 text-sm hover:bg-gray-100 dark:hover:bg-gray-700 flex items-center justify-between ${\n                      sortBy === 'title' ? 'bg-indigo-50 dark:bg-indigo-900 text-indigo-700 dark:text-indigo-300' : 'text-gray-700 dark:text-gray-300'\n                    }`}\n                    onClick={() => {\n                      if (sortBy === 'title') {\n                        setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\n                      } else {\n                        setSortBy('title');\n                        setSortDirection('asc');\n                      }\n                    }}\n                  >\n                    <span className=\"flex items-center\">\n                      <Hash size={16} className=\"mr-2\" />\n                      Title\n                    </span>\n                    {sortBy === 'title' && (\n                      <span className=\"text-xs\">{sortDirection === 'asc' ? '↑' : '↓'}</span>\n                    )}\n                  </button>\n                  \n                  <button\n                    className={`w-full text-left px-4 py-2 text-sm hover:bg-gray-100 dark:hover:bg-gray-700 flex items-center justify-between ${\n                      sortBy === 'estimatedMinutes' ? 'bg-indigo-50 dark:bg-indigo-900 text-indigo-700 dark:text-indigo-300' : 'text-gray-700 dark:text-gray-300'\n                    }`}\n                    onClick={() => {\n                      if (sortBy === 'estimatedMinutes') {\n                        setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\n                      } else {\n                        setSortBy('estimatedMinutes');\n                        setSortDirection('desc');\n                      }\n                    }}\n                  >\n                    <span className=\"flex items-center\">\n                      <Clock size={16} className=\"mr-2\" />\n                      Time Estimate\n                    </span>\n                    {sortBy === 'estimatedMinutes' && (\n                      <span className=\"text-xs\">{sortDirection === 'asc' ? '↑' : '↓'}</span>\n                    )}\n                  </button>\n                  \n                  <button\n                    className={`w-full text-left px-4 py-2 text-sm hover:bg-gray-100 dark:hover:bg-gray-700 flex items-center justify-between ${\n                      sortBy === 'project' ? 'bg-indigo-50 dark:bg-indigo-900 text-indigo-700 dark:text-indigo-300' : 'text-gray-700 dark:text-gray-300'\n                    }`}\n                    onClick={() => {\n                      if (sortBy === 'project') {\n                        setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\n                      } else {\n                        setSortBy('project');\n                        setSortDirection('asc');\n                      }\n                    }}\n                  >\n                    <span className=\"flex items-center\">\n                      <FolderOpen size={16} className=\"mr-2\" />\n                      Project\n                    </span>\n                    {sortBy === 'project' && (\n                      <span className=\"text-xs\">{sortDirection === 'asc' ? '↑' : '↓'}</span>\n                    )}\n                  </button>\n                </div>\n              </div>\n            )}\n          </div>\n          <Button\n            variant=\"secondary\"\n            icon={<Filter size={16} />}\n            onClick={toggleFilter}\n          >\n            Filter\n          </Button>\n          <Button\n            variant=\"primary\"\n            icon={<Plus size={16} />}\n            onClick={() => handleOpenModal()}\n          >\n            New Task\n          </Button>\n        </div>\n      </div>\n      \n      {/* Bulk Actions Bar */}\n      {showBulkActions && (\n        <Card className=\"bg-indigo-50\">\n          <div className=\"flex flex-wrap items-center justify-between gap-2\">\n            <div className=\"flex items-center gap-2\">\n              <Button\n                size=\"sm\"\n                variant=\"outline\"\n                onClick={selectAllVisibleTasks}\n              >\n                Select All\n              </Button>\n              <Button\n                size=\"sm\"\n                variant=\"outline\"\n                onClick={deselectAllTasks}\n              >\n                Deselect All\n              </Button>\n              <span className=\"text-sm text-gray-600\">\n                {selectedTasks.size} selected\n              </span>\n            </div>\n            <div className=\"flex items-center gap-2\">\n              <Button\n                size=\"sm\"\n                variant=\"primary\"\n                icon={<CheckCircle2 size={14} />}\n                onClick={handleBulkComplete}\n                disabled={selectedTasks.size === 0}\n              >\n                Complete\n              </Button>\n              <Button\n                size=\"sm\"\n                variant=\"secondary\"\n                icon={<Folder size={14} />}\n                onClick={handleBulkMove}\n                disabled={selectedTasks.size === 0}\n              >\n                Move\n              </Button>\n              <Button\n                size=\"sm\"\n                variant=\"secondary\"\n                icon={<Tag size={14} />}\n                onClick={handleBulkCategoryAssign}\n                disabled={selectedTasks.size === 0}\n              >\n                Categories\n              </Button>\n              <Button\n                size=\"sm\"\n                variant=\"secondary\"\n                icon={<Layers size={14} />}\n                onClick={handleBulkConvertToSubtasks}\n                disabled={selectedTasks.size === 0}\n              >\n                Make Subtasks\n              </Button>\n              <Button\n                size=\"sm\"\n                variant=\"secondary\"\n                icon={<FileArchive size={14} />}\n                onClick={handleBulkArchive}\n                disabled={selectedTasks.size === 0}\n              >\n                Archive\n              </Button>\n              <Button\n                size=\"sm\"\n                variant=\"danger\"\n                icon={<Trash2 size={14} />}\n                onClick={handleBulkDelete}\n                disabled={selectedTasks.size === 0}\n              >\n                Delete\n              </Button>\n            </div>\n          </div>\n        </Card>\n      )}\n      \n      {/* Quick Task Input */}\n      <div className=\"mb-6\">\n        <QuickCapture \n          placeholder=\"Add a task quickly... (try !today, !tomorrow, !high)\"\n          defaultProjectId={filterProjectId}\n          onTaskAdded={() => {\n            if (activeTab === 'today') {\n              // Stay on today tab\n            } else if (activeTab === 'all') {\n              // Stay on all tab\n            } else {\n              setActiveTab('all');\n            }\n          }}\n        />\n      </div>\n      \n      {/* Tab navigation */}\n      <div className=\"overflow-x-auto pb-1 md:pb-0 hide-scrollbar\">\n        <div className=\"flex min-w-max border-b border-gray-200\">\n          <button\n            className={`flex-shrink-0 px-4 py-2 font-medium text-sm rounded-t-md border-b-2 transition-colors ${\n              activeTab === 'today' \n                ? 'border-indigo-500 text-indigo-600 bg-indigo-50' \n                : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n            }`}\n            onClick={() => setActiveTab('today')}\n          >\n            <div className=\"flex items-center space-x-2\">\n              <Calendar size={16} />\n              <span className=\"whitespace-nowrap\">Today{todayTasks.length > 0 && ` (${todayTasks.length})`}</span>\n            </div>\n          </button>\n          \n          <button\n            className={`flex-shrink-0 px-4 py-2 font-medium text-sm rounded-t-md border-b-2 transition-colors ${\n              activeTab === 'tomorrow' \n                ? 'border-indigo-500 text-indigo-600 bg-indigo-50' \n                : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n            }`}\n            onClick={() => setActiveTab('tomorrow')}\n          >\n            <div className=\"flex items-center space-x-2\">\n              <CalendarDays size={16} />\n              <span className=\"whitespace-nowrap\">Tomorrow{tomorrowTasks.length > 0 && ` (${tomorrowTasks.length})`}</span>\n            </div>\n          </button>\n          \n          <button\n            className={`flex-shrink-0 px-4 py-2 font-medium text-sm rounded-t-md border-b-2 transition-colors ${\n              activeTab === 'week' \n                ? 'border-indigo-500 text-indigo-600 bg-indigo-50' \n                : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n            }`}\n            onClick={() => setActiveTab('week')}\n          >\n            <div className=\"flex items-center space-x-2\">\n              <CalendarDays size={16} />\n              <span className=\"whitespace-nowrap\">This Week{thisWeekTasks.length > 0 && ` (${thisWeekTasks.length})`}</span>\n            </div>\n          </button>\n          \n          <button\n            className={`flex-shrink-0 px-4 py-2 font-medium text-sm rounded-t-md border-b-2 transition-colors ${\n              activeTab === 'overdue' \n                ? 'border-red-500 text-red-600 bg-red-50' \n                : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n            }`}\n            onClick={() => setActiveTab('overdue')}\n          >\n            <div className=\"flex items-center space-x-2\">\n              <AlertTriangle size={16} className={overdueTasks.length > 0 ? 'text-red-500' : ''} />\n              <span className=\"whitespace-nowrap\">Overdue{overdueTasks.length > 0 && ` (${overdueTasks.length})`}</span>\n            </div>\n          </button>\n          \n          <button\n            className={`flex-shrink-0 px-4 py-2 font-medium text-sm rounded-t-md border-b-2 transition-colors ${\n              activeTab === 'all' \n                ? 'border-indigo-500 text-indigo-600 bg-indigo-50' \n                : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n            }`}\n            onClick={() => setActiveTab('all')}\n          >\n            <div className=\"flex items-center space-x-2\">\n              <Layers size={16} />\n              <span className=\"whitespace-nowrap\">All Tasks</span>\n            </div>\n          </button>\n          \n          <button\n            className={`flex-shrink-0 px-4 py-2 font-medium text-sm rounded-t-md border-b-2 transition-colors ${\n              activeTab === 'deleted' \n                ? 'border-gray-500 text-gray-600 bg-gray-50' \n                : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n            }`}\n            onClick={() => setActiveTab('deleted')}\n          >\n            <div className=\"flex items-center space-x-2\">\n              <Trash2 size={16} />\n              <span className=\"whitespace-nowrap\">Deleted</span>\n            </div>\n          </button>\n        </div>\n      </div>\n      \n      {/* Add CSS for hiding scrollbar but allowing scroll */}\n      <style>{`\n        .hide-scrollbar {\n          -ms-overflow-style: none;  /* IE and Edge */\n          scrollbar-width: none;  /* Firefox */\n        }\n        .hide-scrollbar::-webkit-scrollbar {\n          display: none;  /* Chrome, Safari, Opera */\n        }\n      `}</style>\n      \n      {/* Undo notification */}\n      {showUndoNotification && (\n        <div className=\"fixed bottom-4 right-4 bg-gray-800 text-white px-4 py-2 rounded-lg shadow-lg flex items-center space-x-3 z-50\">\n          <span>Task deleted</span>\n          <Button\n            variant=\"secondary\"\n            size=\"sm\"\n            icon={<Undo2 size={14} />}\n            onClick={handleUndo}\n          >\n            Undo\n          </Button>\n        </div>\n      )}\n      \n      {/* Filter panel - same as before */}\n      {isFilterOpen && (\n        <Card className=\"bg-gray-50\">\n          <div className=\"space-y-4\">\n            <div className=\"flex justify-between items-center\">\n              <h3 className=\"text-lg font-medium text-gray-900\">Filters</h3>\n              <button\n                className=\"text-gray-400 hover:text-gray-500\"\n                onClick={toggleFilter}\n              >\n                <X size={20} />\n              </button>\n            </div>\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Task Status\n                </label>\n                <div className=\"flex flex-col space-y-2\">\n                  <div className=\"flex items-center\">\n                    <input\n                      type=\"checkbox\"\n                      id=\"showCompleted\"\n                      checked={showCompleted}\n                      onChange={() => setShowCompleted(!showCompleted)}\n                      className=\"h-4 w-4 text-indigo-600 border-gray-300 rounded\"\n                    />\n                    <label htmlFor=\"showCompleted\" className=\"ml-2 text-sm text-gray-700\">\n                      Show completed tasks\n                    </label>\n                  </div>\n                  <div className=\"flex items-center\">\n                    <input\n                      type=\"checkbox\"\n                      id=\"showArchived\"\n                      checked={showArchived}\n                      onChange={() => setShowArchived(!showArchived)}\n                      className=\"h-4 w-4 text-indigo-600 border-gray-300 rounded\"\n                    />\n                    <label htmlFor=\"showArchived\" className=\"ml-2 text-sm text-gray-700\">\n                      Show archived tasks\n                    </label>\n                  </div>\n                </div>\n              </div>\n              \n              <div>\n                <label htmlFor=\"projectFilter\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Project\n                </label>\n                <select\n                  id=\"projectFilter\"\n                  value={filterProjectId || ''}\n                  onChange={(e) => setFilterProjectId(e.target.value || null)}\n                  className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\n                >\n                  <option value=\"\">All Projects</option>\n                  {projects.map(project => (\n                    <option key={project.id} value={project.id}>\n                      {project.name}\n                    </option>\n                  ))}\n                </select>\n              </div>\n              \n              <div>\n                <label htmlFor=\"categoryFilter\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n                  Category\n                </label>\n                <select\n                  id=\"categoryFilter\"\n                  value={filterCategoryId || ''}\n                  onChange={(e) => setFilterCategoryId(e.target.value || null)}\n                  className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\n                >\n                  <option value=\"\">All Categories</option>\n                  {categories.map(category => (\n                    <option key={category.id} value={category.id}>\n                      {category.name}\n                    </option>\n                  ))}\n                </select>\n              </div>\n            </div>\n            \n            <div className=\"flex justify-end\">\n              <Button\n                variant=\"secondary\"\n                size=\"sm\"\n                onClick={clearFilters}\n              >\n                Clear Filters\n              </Button>\n            </div>\n          </div>\n        </Card>\n      )}\n      \n      {/* Smart Sort Controls */}\n      {showSmartSort && (\n        <Card className=\"bg-gradient-to-r from-purple-50 to-indigo-50 dark:from-purple-900/20 dark:to-indigo-900/20 border-purple-200 dark:border-purple-800\">\n          <div className=\"space-y-4\">\n            <div className=\"flex justify-between items-center\">\n              <h3 className=\"text-lg font-medium text-gray-900 dark:text-gray-100 flex items-center\">\n                <Brain size={20} className=\"mr-2 text-purple-600 dark:text-purple-400\" />\n                Smart Task Prioritization\n              </h3>\n              <button\n                className=\"text-gray-400 hover:text-gray-500\"\n                onClick={() => setShowSmartSort(false)}\n              >\n                <X size={20} />\n              </button>\n            </div>\n            \n            {/* Current Energy Level */}\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                <Battery size={16} className=\"inline mr-1\" />\n                Your Current Energy Level\n              </label>\n              <div className=\"flex gap-2\">\n                {(['low', 'medium', 'high'] as const).map(level => (\n                  <button\n                    key={level}\n                    onClick={() => setCurrentEnergy(level)}\n                    className={`px-4 py-2 rounded-lg font-medium transition-all ${\n                      currentEnergy === level\n                        ? 'bg-purple-600 text-white shadow-lg scale-105'\n                        : 'bg-white dark:bg-gray-800 text-gray-700 dark:text-gray-300 hover:bg-purple-50 dark:hover:bg-purple-900/20'\n                    }`}\n                  >\n                    {level === 'low' && '🔋 Low'}\n                    {level === 'medium' && '🔋🔋 Medium'}\n                    {level === 'high' && '🔋🔋🔋 High'}\n                  </button>\n                ))}\n              </div>\n            </div>\n            \n            {/* Sorting Mode */}\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                <Zap size={16} className=\"inline mr-1\" />\n                Prioritization Strategy\n              </label>\n              <div className=\"grid grid-cols-2 md:grid-cols-3 gap-2\">\n                {[\n                  { mode: 'smart' as const, label: '🧠 Smart Sort', desc: 'AI-optimized task ordering' },\n                  { mode: 'energymatch' as const, label: '🔋 Energy Match', desc: 'Only matching tasks' },\n                  { mode: 'quickwins' as const, label: '⚡ Quick Wins', desc: 'Build momentum' },\n                  { mode: 'eatthefrog' as const, label: '🐸 Eat the Frog', desc: 'Hard tasks first' },\n                  { mode: 'deadline' as const, label: '⏰ Deadline Focus', desc: 'Due date priority' },\n                  { mode: 'priority' as const, label: '⭐ Priority', desc: 'Traditional priority' },\n                ].map(({ mode, label, desc }) => (\n                  <button\n                    key={mode}\n                    onClick={() => setSmartSortMode(mode)}\n                    className={`p-3 rounded-lg text-left transition-all ${\n                      smartSortMode === mode\n                        ? 'bg-purple-600 text-white shadow-lg'\n                        : 'bg-white dark:bg-gray-800 text-gray-700 dark:text-gray-300 hover:bg-purple-50 dark:hover:bg-purple-900/20 border border-gray-200 dark:border-gray-700'\n                    }`}\n                  >\n                    <div className=\"font-medium text-sm\">{label}</div>\n                    <div className={`text-xs mt-1 ${smartSortMode === mode ? 'text-purple-100' : 'text-gray-500 dark:text-gray-400'}`}>\n                      {desc}\n                    </div>\n                  </button>\n                ))}\n              </div>\n            </div>\n            \n            {/* Filter Chips */}\n            {(() => {\n              const filteredCounts = getFilteredCounts(tasks, currentEnergy);\n              const activeTasks = tasks.filter(t => !t.completed && !t.archived);\n              return (\n                <div className=\"flex flex-wrap gap-2\">\n                  <div className=\"text-sm font-medium text-gray-700 dark:text-gray-300 mb-2 w-full\">\n                    Quick Filters ({activeTasks.length} active tasks):\n                  </div>\n                  <button\n                    onClick={() => setSmartSortMode('quickwins')}\n                    className={`px-3 py-1 rounded-full text-sm transition-all ${\n                      smartSortMode === 'quickwins'\n                        ? 'bg-green-500 text-white'\n                        : 'bg-green-100 dark:bg-green-900/20 text-green-700 dark:text-green-300 hover:bg-green-200 dark:hover:bg-green-900/30'\n                    }`}\n                  >\n                    ⚡ Quick Wins ({filteredCounts.quickWins})\n                  </button>\n                  \n                  <button\n                    onClick={() => setSmartSortMode('deadline')}\n                    className={`px-3 py-1 rounded-full text-sm transition-all ${\n                      smartSortMode === 'deadline'\n                        ? 'bg-red-500 text-white'\n                        : 'bg-red-100 dark:bg-red-900/20 text-red-700 dark:text-red-300 hover:bg-red-200 dark:hover:bg-red-900/30'\n                    }`}\n                  >\n                    🔥 Due Today ({filteredCounts.dueToday})\n                  </button>\n                  \n                  <button\n                    onClick={() => setSmartSortMode('eatthefrog')}\n                    className={`px-3 py-1 rounded-full text-sm transition-all ${\n                      smartSortMode === 'eatthefrog'\n                        ? 'bg-orange-500 text-white'\n                        : 'bg-orange-100 dark:bg-orange-900/20 text-orange-700 dark:text-orange-300 hover:bg-orange-200 dark:hover:bg-orange-900/30'\n                    }`}\n                  >\n                    💪 High Energy ({filteredCounts.highEnergy})\n                  </button>\n                  \n                  {filteredCounts.energyMatch > 0 && (\n                    <button\n                      onClick={() => setSmartSortMode('energymatch')}\n                      className={`px-3 py-1 rounded-full text-sm transition-all ${\n                        smartSortMode === 'energymatch'\n                          ? 'bg-blue-500 text-white'\n                          : 'bg-blue-100 dark:bg-blue-900/20 text-blue-700 dark:text-blue-300 hover:bg-blue-200 dark:hover:bg-blue-900/30'\n                      }`}\n                    >\n                      🔋 Energy Match ({filteredCounts.energyMatch})\n                    </button>\n                  )}\n                </div>\n              );\n            })()}\n            \n            {/* Smart Sort Info */}\n            <div className=\"bg-white dark:bg-gray-800 rounded-lg p-3 text-sm text-gray-600 dark:text-gray-400\">\n              <p className=\"font-medium text-gray-700 dark:text-gray-300 mb-1\">\n                Current Strategy: {getSortModeInfo(smartSortMode).name}\n              </p>\n              <p>{getSortModeInfo(smartSortMode).description}</p>\n            </div>\n          </div>\n        </Card>\n      )}\n      \n      {/* Task list */}\n      <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-sm p-4\">\n        <div className=\"space-y-4\">\n          {parentTasks.length > 0 ? (\n            <div>\n              {activeTab === 'all' ? (\n                <div className=\"space-y-2\">\n                  {parentTasks.map(task => (\n                    <BulkTaskCard\n                      key={task.id}\n                      task={task}\n                      isSelected={selectedTasks.has(task.id)}\n                      onSelectChange={(selected) => {\n                        if (selected) {\n                          toggleTaskSelection(task.id);\n                        } else {\n                          const newSelection = new Set(selectedTasks);\n                          newSelection.delete(task.id);\n                          setSelectedTasks(newSelection);\n                        }\n                      }}\n                      onEdit={handleOpenModal}\n                      onDelete={handleDeleteTask}\n                      onBreakdown={handleBreakdown}\n                      onConvertToProject={handleConvertToProject}\n                    />\n                  ))}\n                </div>\n              ) : (\n                <div className=\"space-y-2\">\n                  {parentTasks.map(task => (\n                    <BulkTaskCard\n                      key={task.id}\n                      task={task}\n                      isSelected={selectedTasks.has(task.id)}\n                      onSelectChange={(selected) => {\n                        if (selected) {\n                          toggleTaskSelection(task.id);\n                        } else {\n                          const newSelection = new Set(selectedTasks);\n                          newSelection.delete(task.id);\n                          setSelectedTasks(newSelection);\n                        }\n                      }}\n                      onEdit={handleOpenModal}\n                      onDelete={handleDeleteTask}\n                      onBreakdown={handleBreakdown}\n                      onConvertToProject={handleConvertToProject}\n                    />\n                  ))}\n                </div>\n              )}\n            </div>\n          ) : (\n            <Empty\n              title=\"No tasks found\"\n              description={\n                filterProjectId || filterCategoryId\n                  ? \"Try adjusting your filters or create a new task\"\n                  : activeTab === 'today'\n                    ? \"No tasks due today. Add a task or check another tab.\"\n                    : activeTab === 'tomorrow'\n                      ? \"No tasks due tomorrow. Add a task or check another tab.\"\n                      : activeTab === 'week'\n                        ? \"No tasks due this week. Add a task or check another tab.\"\n                        : activeTab === 'overdue'\n                          ? \"No overdue tasks. You're all caught up!\"\n                          : \"Get started by creating your first task\"\n              }\n              action={\n                <Button\n                  variant=\"primary\"\n                  size=\"sm\"\n                  icon={<Plus size={16} />}\n                  onClick={() => handleOpenModal()}\n                >\n                  New Task\n                </Button>\n              }\n            />\n          )}\n        </div>\n      </div>\n      \n      {/* Task Modal */}\n      <Modal\n        isOpen={isModalOpen}\n        onClose={handleCloseModal}\n        title={editingTask ? 'Edit Task' : 'Create New Task'}\n        size=\"3xl\"\n      >\n        <TaskFormWithDependencies\n          task={editingTask || undefined}\n          onClose={handleCloseModal}\n          isEdit={!!editingTask}\n        />\n      </Modal>\n      \n      {/* Archive Confirmation Modal */}\n      <Modal\n        isOpen={showArchiveConfirm}\n        onClose={handleArchiveConfirmClose}\n        title=\"Archive Completed Tasks\"\n        size=\"sm\"\n      >\n        <div className=\"space-y-4\">\n          <p className=\"text-gray-600\">\n            This will archive all completed tasks. Archived tasks will be hidden by default but can still be viewed using the filter.\n          </p>\n          <div className=\"flex justify-end space-x-3 pt-4\">\n            <Button\n              variant=\"secondary\"\n              onClick={handleArchiveConfirmClose}\n            >\n              Cancel\n            </Button>\n            <Button\n              variant=\"primary\"\n              icon={<Archive size={16} />}\n              onClick={handleArchiveCompleted}\n            >\n              Archive Tasks\n            </Button>\n          </div>\n        </div>\n      </Modal>\n      \n      {/* Bulk Move Modal */}\n      <Modal\n        isOpen={showBulkMoveModal}\n        onClose={() => setShowBulkMoveModal(false)}\n        title=\"Move Selected Tasks\"\n        size=\"sm\"\n      >\n        <div className=\"space-y-4\">\n          <p className=\"text-gray-600\">\n            Move {selectedTasks.size} selected task{selectedTasks.size !== 1 ? 's' : ''} to:\n          </p>\n          <select\n            value={selectedProjectForMove || ''}\n            onChange={(e) => setSelectedProjectForMove(e.target.value || null)}\n            className=\"block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm\"\n          >\n            <option value=\"\">No Project</option>\n            {projects.map(project => (\n              <option key={project.id} value={project.id}>\n                {project.name}\n              </option>\n            ))}\n          </select>\n          <div className=\"flex justify-end space-x-3 pt-4\">\n            <Button\n              variant=\"secondary\"\n              onClick={() => setShowBulkMoveModal(false)}\n            >\n              Cancel\n            </Button>\n            <Button\n              variant=\"primary\"\n              icon={<Folder size={16} />}\n              onClick={executeBulkMove}\n            >\n              Move Tasks\n            </Button>\n          </div>\n        </div>\n      </Modal>\n      \n      {/* AI Breakdown Modal */}\n      {breakdownTask && (\n        <AITaskBreakdown\n          task={breakdownTask}\n          onAccept={handleBreakdownAccept}\n          onClose={handleBreakdownClose}\n        />\n      )}\n      \n      {/* Convert to Project Modal */}\n      {convertToProjectTask && (\n        <ConvertToProject\n          task={convertToProjectTask}\n          onConfirm={handleConvertToProjectConfirm}\n          onCancel={handleConvertToProjectCancel}\n          subtasks={tasks.filter(t => t.parentTaskId === convertToProjectTask.id)}\n        />\n      )}\n      \n      {/* Convert to Subtasks Modal */}\n      <Modal\n        isOpen={showConvertToSubtasksModal}\n        onClose={() => {\n          setShowConvertToSubtasksModal(false);\n          setSelectedParentTaskId(null);\n        }}\n        title=\"Convert to Subtasks\"\n        size=\"md\"\n      >\n        <div className=\"space-y-4\">\n          <p className=\"text-gray-600\">\n            Convert {selectedTasks.size} selected task{selectedTasks.size !== 1 ? 's' : ''} into subtasks of:\n          </p>\n          \n          <div className=\"max-h-96 overflow-y-auto space-y-2 border rounded-md p-3\">\n            {tasks\n              .filter(task => \n                !task.completed && \n                !task.archived && \n                !selectedTasks.has(task.id) // Can't make a task a subtask of itself\n              )\n              .map(task => (\n                <label\n                  key={task.id}\n                  className={`flex items-start p-3 rounded-lg cursor-pointer transition-colors ${\n                    selectedParentTaskId === task.id \n                      ? 'bg-indigo-50 border-2 border-indigo-500' \n                      : 'bg-gray-50 hover:bg-gray-100 border-2 border-transparent'\n                  }`}\n                >\n                  <input\n                    type=\"radio\"\n                    name=\"parentTask\"\n                    value={task.id}\n                    checked={selectedParentTaskId === task.id}\n                    onChange={() => setSelectedParentTaskId(task.id)}\n                    className=\"mt-1 h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300\"\n                  />\n                  <div className=\"ml-3 flex-1\">\n                    <div className=\"font-medium text-gray-900\">{task.title}</div>\n                    {task.description && (\n                      <div className=\"text-sm text-gray-500 mt-1\">{task.description}</div>\n                    )}\n                    {task.projectId && (\n                      <div className=\"text-xs text-gray-500 mt-1\">\n                        Project: {projects.find(p => p.id === task.projectId)?.name}\n                      </div>\n                    )}\n                  </div>\n                </label>\n              ))\n            }\n          </div>\n          \n          <div className=\"flex justify-end space-x-3 pt-4\">\n            <Button\n              variant=\"secondary\"\n              onClick={() => {\n                setShowConvertToSubtasksModal(false);\n                setSelectedParentTaskId(null);\n              }}\n            >\n              Cancel\n            </Button>\n            <Button\n              variant=\"primary\"\n              icon={<Layers size={16} />}\n              onClick={executeBulkConvertToSubtasks}\n              disabled={!selectedParentTaskId}\n            >\n              Convert to Subtasks\n            </Button>\n          </div>\n        </div>\n      </Modal>\n      \n      {/* Bulk Category Assignment Modal */}\n      <Modal\n        isOpen={showBulkCategoryModal}\n        onClose={() => {\n          setShowBulkCategoryModal(false);\n          setSelectedCategoryIdsForBulk([]);\n          setCategoryAssignMode('add');\n        }}\n        title=\"Assign Categories\"\n        size=\"md\"\n      >\n        <div className=\"space-y-4\">\n          <p className=\"text-gray-600\">\n            Assign categories to {selectedTasks.size} selected task{selectedTasks.size !== 1 ? 's' : ''}:\n          </p>\n          \n          <div className=\"space-y-2\">\n            <label className=\"block text-sm font-medium text-gray-700\">\n              Assignment Mode\n            </label>\n            <div className=\"space-y-2\">\n              <label className=\"flex items-center\">\n                <input\n                  type=\"radio\"\n                  name=\"assignMode\"\n                  value=\"add\"\n                  checked={categoryAssignMode === 'add'}\n                  onChange={() => setCategoryAssignMode('add')}\n                  className=\"h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300\"\n                />\n                <span className=\"ml-2 text-sm text-gray-700\">\n                  Add to existing categories\n                </span>\n              </label>\n              <label className=\"flex items-center\">\n                <input\n                  type=\"radio\"\n                  name=\"assignMode\"\n                  value=\"replace\"\n                  checked={categoryAssignMode === 'replace'}\n                  onChange={() => setCategoryAssignMode('replace')}\n                  className=\"h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300\"\n                />\n                <span className=\"ml-2 text-sm text-gray-700\">\n                  Replace all existing categories\n                </span>\n              </label>\n            </div>\n          </div>\n          \n          <div className=\"space-y-2\">\n            <label className=\"block text-sm font-medium text-gray-700\">\n              Select Categories\n            </label>\n            <div className=\"max-h-64 overflow-y-auto space-y-2 border rounded-md p-3\">\n              {categories.map(category => (\n                <label\n                  key={category.id}\n                  className=\"flex items-center p-2 rounded hover:bg-gray-50 cursor-pointer\"\n                >\n                  <input\n                    type=\"checkbox\"\n                    value={category.id}\n                    checked={selectedCategoryIdsForBulk.includes(category.id)}\n                    onChange={(e) => {\n                      if (e.target.checked) {\n                        setSelectedCategoryIdsForBulk([...selectedCategoryIdsForBulk, category.id]);\n                      } else {\n                        setSelectedCategoryIdsForBulk(\n                          selectedCategoryIdsForBulk.filter(id => id !== category.id)\n                        );\n                      }\n                    }}\n                    className=\"h-4 w-4 text-indigo-600 focus:ring-indigo-500 border-gray-300 rounded\"\n                  />\n                  <div className=\"ml-3 flex items-center\">\n                    <div\n                      className=\"h-4 w-4 rounded mr-2\"\n                      style={{ backgroundColor: category.color }}\n                    />\n                    <span className=\"text-sm text-gray-900\">{category.name}</span>\n                  </div>\n                </label>\n              ))}\n            </div>\n          </div>\n          \n          <div className=\"flex justify-end space-x-3 pt-4\">\n            <Button\n              variant=\"secondary\"\n              onClick={() => {\n                setShowBulkCategoryModal(false);\n                setSelectedCategoryIdsForBulk([]);\n                setCategoryAssignMode('add');\n              }}\n            >\n              Cancel\n            </Button>\n            <Button\n              variant=\"primary\"\n              icon={<Tag size={16} />}\n              onClick={executeBulkCategoryAssign}\n              disabled={selectedCategoryIdsForBulk.length === 0}\n            >\n              Assign Categories\n            </Button>\n          </div>\n        </div>\n      </Modal>\n    </div>\n  );\n};\n\nexport default TasksPageWithBulkOps;"],"names":["CalendarDays","createLucideIcon","Undo2","ConvertToProject","task","onConfirm","onCancel","subtasks","projectName","setProjectName","useState","projectDescription","setProjectDescription","projectColor","setProjectColor","options","setOptions","colorOptions","handleConfirm","jsx","Modal","jsxs","Layers","e","color","ChevronRight","Button","FolderPlus","BulkTaskCard","isSelected","onSelectChange","onEdit","onDelete","onBreakdown","onConvertToProject","updateTask","useAppContext","TaskDisplay","TasksPageWithBulkOps","location","useLocation","tasks","projects","categories","deleteTask","undoDelete","hasRecentlyDeleted","archiveCompletedTasks","bulkDeleteTasks","bulkCompleteTasks","bulkMoveTasks","bulkArchiveTasks","bulkAddTasks","bulkConvertToSubtasks","bulkAssignCategories","searchParams","tabParam","categoryIdParam","initialTab","isModalOpen","setIsModalOpen","editingTask","setEditingTask","showUndoNotification","setShowUndoNotification","showArchiveConfirm","setShowArchiveConfirm","showBulkActions","setShowBulkActions","selectedTasks","setSelectedTasks","showBulkMoveModal","setShowBulkMoveModal","selectedProjectForMove","setSelectedProjectForMove","breakdownTask","setBreakdownTask","convertToProjectTask","setConvertToProjectTask","showConvertToSubtasksModal","setShowConvertToSubtasksModal","selectedParentTaskId","setSelectedParentTaskId","setDeletedTasks","showBulkCategoryModal","setShowBulkCategoryModal","selectedCategoryIdsForBulk","setSelectedCategoryIdsForBulk","categoryAssignMode","setCategoryAssignMode","showCompleted","setShowCompleted","showArchived","setShowArchived","filterProjectId","setFilterProjectId","filterCategoryId","setFilterCategoryId","isFilterOpen","setIsFilterOpen","activeTab","setActiveTab","sortBy","setSortBy","sortDirection","setSortDirection","showSortMenu","setShowSortMenu","sortMenuRef","useRef","smartSortMode","setSmartSortMode","currentEnergy","setCurrentEnergy","showSmartSort","setShowSmartSort","useEffect","timer","loadDeletedTasks","handleClickOutside","event","deleted","getDeletedTasks","a","b","handleOpenModal","handleCloseModal","handleDeleteTask","taskId","handleUndo","toggleFilter","clearFilters","handleArchiveConfirmOpen","handleArchiveConfirmClose","handleArchiveCompleted","handleBreakdown","handleBreakdownAccept","preparedSubtasks","subtask","handleBreakdownClose","handleConvertToProject","handleConvertToProjectConfirm","projectData","newProject","t","phases","index","phaseName","error","handleConvertToProjectCancel","toggleTaskSelection","newSelection","selectAllVisibleTasks","visibleTaskIds","getActiveTaskList","deselectAllTasks","handleBulkDelete","handleBulkComplete","handleBulkMove","executeBulkMove","handleBulkArchive","handleBulkConvertToSubtasks","executeBulkConvertToSubtasks","handleBulkCategoryAssign","executeBulkCategoryAssign","getTomorrowDate","tomorrow","formatDate","getTasksDueTomorrow","tomorrowDate","sortTasks","smartSortTasks","comparison","priorityOrder","aMinutes","aProject","_a","p","bProject","_b","applyBaseFilter","overdueTasksUnsorted","getOverdueTasks","todayTasksUnsorted","getTasksDueToday","tomorrowTasksUnsorted","thisWeekTasksUnsorted","getTasksDueThisWeek","otherTasksUnsorted","overdueTasks","todayTasks","tomorrowTasks","thisWeekTasks","allTasks","allTasksDefault","activeTaskList","parentTasks","Archive","Brain","ArrowUpDown","Calendar","Star","Plus","Hash","Clock","FolderOpen","Filter","Card","CheckCircle2","Folder","Tag","FileArchive","Trash2","QuickCapture","AlertTriangle","X","project","category","Battery","level","Zap","mode","label","desc","filteredCounts","getFilteredCounts","activeTasks","getSortModeInfo","selected","Empty","TaskFormWithDependencies","AITaskBreakdown","id"],"mappings":"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","x_google_ignoreList":[0,1]}